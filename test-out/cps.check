function test1(x0) {
var x1 = [1, 2, 3]
var x2 = 0
var x15 = function() {
var x16 = x2
var x17 = x1.length
var x18 = x16 < x17
var x33
if (x18) {
var x19 = x1[x16]
var x20 = x19 * 1000
var x21 = "sleeping for "+x20
var x22 = console.log(x21)
var x24 = String(x19)
var x23 = function() {
var x25 = console.log(x24)
var x26 = x2 += 1
var x27 = x15()
return x27
}
var x29 = window.setTimeout(x23,x20)
x33=undefined
} else {
var x31 = console.log("done")
x33=x31
}
return x33
}
var x3 = function() {
var x4 = x2
var x5 = x1.length
var x6 = x4 < x5
var x41
if (x6) {
var x7 = x1[x4]
var x8 = x7 * 1000
var x9 = "sleeping for "+x8
var x10 = console.log(x9)
var x12 = String(x7)
var x11 = function() {
var x13 = console.log(x12)
var x14 = x2 += 1
var x35 = x15()
return x35
}
var x37 = window.setTimeout(x11,x8)
x41=undefined
} else {
var x39 = console.log("done")
x41=x39
}
return x41
}
var x43 = x3()
return x43
}
function test2(x45) {
var x46 = [4, 5, 6]
var x47 = []
var x48 = 0
var x49 = 0
var x64 = function() {
var x65 = x49
var x66 = x46.length
var x67 = x65 < x66
var x85
if (x67) {
var x68 = x46[x65]
var x69 = x68 * 1000
var x70 = "sleeping for "+x69
var x71 = console.log(x70)
var x73 = x68 + 1
var x72 = function() {
var x74 = x48
var x75 = x47[x74] = x73
var x76 = x48 += 1
var x77 = x49 += 1
var x78 = x64()
return x78
}
var x80 = window.setTimeout(x72,x69)
x85=undefined
} else {
var x82 = String(x47)
var x83 = console.log(x82)
x85=x83
}
return x85
}
var x50 = function() {
var x51 = x49
var x52 = x46.length
var x53 = x51 < x52
var x94
if (x53) {
var x54 = x46[x51]
var x55 = x54 * 1000
var x56 = "sleeping for "+x55
var x57 = console.log(x56)
var x59 = x54 + 1
var x58 = function() {
var x60 = x48
var x61 = x47[x60] = x59
var x62 = x48 += 1
var x63 = x49 += 1
var x87 = x64()
return x87
}
var x89 = window.setTimeout(x58,x55)
x94=undefined
} else {
var x91 = String(x47)
var x92 = console.log(x91)
x94=x92
}
return x94
}
var x96 = x50()
return x96
}
function test3(x98) {
var x99 = [1, 2, 3]
var x132 = function() {
this.$init$()
}
x132.prototype.$init$ = function() {
var x102 = this.scala$js$JSDataStructures$Cell$$value = null
var x103 = this.scala$js$JSDataStructures$Cell$$defined = false
var x104 = []
var x105 = this.scala$js$JSDataStructures$Cell$$queue = x104
return null
}
x132.prototype.get = function(x107) {
var x109 = this.scala$js$JSDataStructures$Cell$$defined
var x117
if (x109) {
var x110 = this.scala$js$JSDataStructures$Cell$$value
var x111 = x107(x110)
x117=x111
} else {
var x113 = this.scala$js$JSDataStructures$Cell$$queue
var x114 = x113.length
var x115 = x113[x114] = x107
x117=x115
}
return x117
}
x132.prototype.set = function(x119) {
var x121 = this.scala$js$JSDataStructures$Cell$$defined
var x130
if (x121) {
x130=undefined
} else {
var x122 = this.scala$js$JSDataStructures$Cell$$value = x119
var x123 = this.scala$js$JSDataStructures$Cell$$defined = true
var x124 = this.scala$js$JSDataStructures$Cell$$queue
var x128=x124.forEach(
function(x125,i_,a_){
var x126 = x125(x119)
return x126
})
x130=x128
}
return x130
}
var x145=x99.map(
function(x100){
var x133 = new x132()
var x134 = x100 * 1000
var x135 = "sleeping for "+x134
var x136 = console.log(x135)
var x138 = String(x100)
var x137 = function() {
var x139 = console.log(x138)
var x141 = x133.set(x139)
return x141
}
var x143 = window.setTimeout(x137,x134)
return x133
})
var x146 = 0
var x161 = function() {
var x162 = x146 += 1
var x163 = x155()
return x163
}
var x155 = function() {
var x156 = x146
var x157 = x145.length
var x158 = x156 < x157
var x169
if (x158) {
var x159 = x145[x156]
var x165 = x159.get(x161)
x169=x165
} else {
var x167 = console.log("done")
x169=x167
}
return x169
}
var x153 = function() {
var x154 = x146 += 1
var x171 = x155()
return x171
}
var x147 = function() {
var x148 = x146
var x149 = x145.length
var x150 = x148 < x149
var x177
if (x150) {
var x151 = x145[x148]
var x173 = x151.get(x153)
x177=x173
} else {
var x175 = console.log("done")
x177=x175
}
return x177
}
var x179 = x147()
return x179
}
function test3b(x181) {
var x182 = [3, 2, 1]
var x132 = function() {
this.$init$()
}
x132.prototype.$init$ = function() {
var x102 = this.scala$js$JSDataStructures$Cell$$value = null
var x103 = this.scala$js$JSDataStructures$Cell$$defined = false
var x104 = []
var x105 = this.scala$js$JSDataStructures$Cell$$queue = x104
return null
}
x132.prototype.get = function(x107) {
var x109 = this.scala$js$JSDataStructures$Cell$$defined
var x117
if (x109) {
var x110 = this.scala$js$JSDataStructures$Cell$$value
var x111 = x107(x110)
x117=x111
} else {
var x113 = this.scala$js$JSDataStructures$Cell$$queue
var x114 = x113.length
var x115 = x113[x114] = x107
x117=x115
}
return x117
}
x132.prototype.set = function(x119) {
var x121 = this.scala$js$JSDataStructures$Cell$$defined
var x130
if (x121) {
x130=undefined
} else {
var x122 = this.scala$js$JSDataStructures$Cell$$value = x119
var x123 = this.scala$js$JSDataStructures$Cell$$defined = true
var x124 = this.scala$js$JSDataStructures$Cell$$queue
var x128=x124.forEach(
function(x125,i_,a_){
var x126 = x125(x119)
return x126
})
x130=x128
}
return x130
}
var x197=x182.map(
function(x183){
var x184 = new x132()
var x185 = x183 * 1000
var x186 = "sleeping for "+x185
var x187 = console.log(x186)
var x189 = String(x183)
var x191 = x183 + 1
var x188 = function() {
var x190 = console.log(x189)
var x193 = x184.set(x191)
return x193
}
var x195 = window.setTimeout(x188,x185)
return x184
})
var x198 = []
var x199 = 0
var x200 = 0
var x219 = function(x220) {
var x221 = x199
var x222 = x198[x221] = x220
var x223 = x199 += 1
var x224 = x200 += 1
var x225 = x213()
return x225
}
var x213 = function() {
var x214 = x200
var x215 = x197.length
var x216 = x214 < x215
var x232
if (x216) {
var x217 = x197[x214]
var x227 = x217.get(x219)
x232=x227
} else {
var x229 = String(x198)
var x230 = console.log(x229)
x232=x230
}
return x232
}
var x207 = function(x208) {
var x209 = x199
var x210 = x198[x209] = x208
var x211 = x199 += 1
var x212 = x200 += 1
var x234 = x213()
return x234
}
var x201 = function() {
var x202 = x200
var x203 = x197.length
var x204 = x202 < x203
var x241
if (x204) {
var x205 = x197[x202]
var x236 = x205.get(x207)
x241=x236
} else {
var x238 = String(x198)
var x239 = console.log(x238)
x241=x239
}
return x241
}
var x243 = x201()
return x243
}
function test3c(x245) {
var x246 = [3, 2, 1]
var x132 = function() {
this.$init$()
}
x132.prototype.$init$ = function() {
var x102 = this.scala$js$JSDataStructures$Cell$$value = null
var x103 = this.scala$js$JSDataStructures$Cell$$defined = false
var x104 = []
var x105 = this.scala$js$JSDataStructures$Cell$$queue = x104
return null
}
x132.prototype.get = function(x107) {
var x109 = this.scala$js$JSDataStructures$Cell$$defined
var x117
if (x109) {
var x110 = this.scala$js$JSDataStructures$Cell$$value
var x111 = x107(x110)
x117=x111
} else {
var x113 = this.scala$js$JSDataStructures$Cell$$queue
var x114 = x113.length
var x115 = x113[x114] = x107
x117=x115
}
return x117
}
x132.prototype.set = function(x119) {
var x121 = this.scala$js$JSDataStructures$Cell$$defined
var x130
if (x121) {
x130=undefined
} else {
var x122 = this.scala$js$JSDataStructures$Cell$$value = x119
var x123 = this.scala$js$JSDataStructures$Cell$$defined = true
var x124 = this.scala$js$JSDataStructures$Cell$$queue
var x128=x124.forEach(
function(x125,i_,a_){
var x126 = x125(x119)
return x126
})
x130=x128
}
return x130
}
var x260=x246.map(
function(x247){
var x248 = new x132()
var x249 = x247 * 1000
var x250 = "sleeping for "+x249
var x251 = console.log(x250)
var x253 = String(x247)
var x252 = function() {
var x254 = console.log(x253)
var x256 = x248.set(x254)
return x256
}
var x258 = window.setTimeout(x252,x249)
return x248
})
var x261 = 0
var x276 = function() {
var x277 = x261 += 1
var x278 = x270()
return x278
}
var x270 = function() {
var x271 = x261
var x272 = x260.length
var x273 = x271 < x272
var x284
if (x273) {
var x274 = x260[x271]
var x280 = x274.get(x276)
x284=x280
} else {
var x282 = console.log("done")
x284=x282
}
return x284
}
var x268 = function() {
var x269 = x261 += 1
var x286 = x270()
return x286
}
var x262 = function() {
var x263 = x261
var x264 = x260.length
var x265 = x263 < x264
var x292
if (x265) {
var x266 = x260[x263]
var x288 = x266.get(x268)
x292=x288
} else {
var x290 = console.log("done")
x292=x290
}
return x292
}
var x294 = x262()
return x294
}
function test4(x296) {
var x297 = ["gkossakowski", "odersky", "adriaanm"]
var x132 = function() {
this.$init$()
}
x132.prototype.$init$ = function() {
var x102 = this.scala$js$JSDataStructures$Cell$$value = null
var x103 = this.scala$js$JSDataStructures$Cell$$defined = false
var x104 = []
var x105 = this.scala$js$JSDataStructures$Cell$$queue = x104
return null
}
x132.prototype.get = function(x107) {
var x109 = this.scala$js$JSDataStructures$Cell$$defined
var x117
if (x109) {
var x110 = this.scala$js$JSDataStructures$Cell$$value
var x111 = x107(x110)
x117=x111
} else {
var x113 = this.scala$js$JSDataStructures$Cell$$queue
var x114 = x113.length
var x115 = x113[x114] = x107
x117=x115
}
return x117
}
x132.prototype.set = function(x119) {
var x121 = this.scala$js$JSDataStructures$Cell$$defined
var x130
if (x121) {
x130=undefined
} else {
var x122 = this.scala$js$JSDataStructures$Cell$$value = x119
var x123 = this.scala$js$JSDataStructures$Cell$$defined = true
var x124 = this.scala$js$JSDataStructures$Cell$$queue
var x128=x124.forEach(
function(x125,i_,a_){
var x126 = x125(x119)
return x126
})
x130=x128
}
return x130
}
var x317=x297.map(
function(x298){
var x299 = new x132()
var x300 = "fetching "+x298
var x301 = console.log(x300)
var x302 = {'screen_name' : x298,'include_rts' : true,'count' : 5,'include_entities' : true}
var x303 = {'url' : "http://api.twitter.com/1/statuses/user_timeline.json",'type' : "GET",'dataType' : "jsonp",'data' : x302}
var x304 = function(x305) {
var x311=x305.forEach(
function(x306,i_,a_){
var x307 = x306.text
var x308 = "fetched "+x307
var x309 = console.log(x308)
return x309
})
var x313 = x299.set(x311)
return x313
}
x303.success = x304
var x315 = $.ajax(x303)
return x299
})
var x318 = 0
var x333 = function() {
var x334 = x318 += 1
var x335 = x327()
return x335
}
var x327 = function() {
var x328 = x318
var x329 = x317.length
var x330 = x328 < x329
var x339
if (x330) {
var x331 = x317[x328]
var x337 = x331.get(x333)
x339=x337
} else {
x339=undefined
}
return x339
}
var x325 = function() {
var x326 = x318 += 1
var x341 = x327()
return x341
}
var x319 = function() {
var x320 = x318
var x321 = x317.length
var x322 = x320 < x321
var x345
if (x322) {
var x323 = x317[x320]
var x343 = x323.get(x325)
x345=x343
} else {
x345=undefined
}
return x345
}
var x347 = x319()
return x347
}
